name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run E2E tests nightly
    - cron: '0 2 * * *'

env:
  # Test environment variables
  NODE_ENV: test
  DOTMAC_JWT_SECRET_KEY: test-secret-key-for-ci
  DOTMAC_REDIS_URL: redis://localhost:6379/1
  DATABASE_URL: sqlite:///tmp/e2e_test.db
  DOTMAC_LOG_LEVEL: WARNING
  CI: true

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1/4, 2/4, 3/4, 4/4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install Python dependencies
        run: |
          pip install poetry
          poetry install --with dev

      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install

      - name: Build frontend packages
        working-directory: frontend
        run: pnpm build

      - name: Install Playwright browsers
        working-directory: frontend/e2e
        run: pnpm install:browsers

      - name: Setup test database
        run: |
          poetry run alembic upgrade head

      - name: Start backend server
        run: |
          poetry run uvicorn src.dotmac.platform.main:app --host 0.0.0.0 --port 8000 &
          sleep 10
        env:
          DOTMAC_JWT_SECRET_KEY: test-secret-key-for-ci
          DOTMAC_REDIS_URL: redis://localhost:6379/1
          DATABASE_URL: sqlite:///tmp/e2e_test.db

      - name: Start frontend app
        working-directory: frontend
        run: |
          pnpm dev:base-app &
          sleep 10

      - name: Wait for services
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: Run E2E tests
        working-directory: frontend/e2e
        run: pnpm test --project=${{ matrix.browser }} --shard=${{ matrix.shard }}
        env:
          E2E_BASE_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: frontend/e2e/test-results/
          retention-days: 30

      - name: Upload Playwright traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-${{ matrix.browser }}-${{ matrix.shard }}
          path: frontend/e2e/test-results/
          retention-days: 30

  merge-reports:
    if: always()
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        working-directory: frontend/e2e
        run: pnpm install

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: frontend/e2e/all-results

      - name: Merge test results
        working-directory: frontend/e2e
        run: |
          pnpm exec playwright merge-reports --reporter html all-results/playwright-report-*

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: merged-playwright-report
          path: frontend/e2e/playwright-report/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read test results
            const reportPath = 'frontend/e2e/test-results/results.json';
            if (fs.existsSync(reportPath)) {
              const results = JSON.parse(fs.readFileSync(reportPath, 'utf8'));

              const comment = `## üé≠ E2E Test Results

              - **Total Tests:** ${results.stats.total}
              - **Passed:** ${results.stats.passed} ‚úÖ
              - **Failed:** ${results.stats.failed} ‚ùå
              - **Skipped:** ${results.stats.skipped} ‚è≠Ô∏è

              ${results.stats.failed > 0 ? '‚ùå Some tests failed. Check the [detailed report](https://github.com/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/' + context.runId + ') for more information.' : '‚úÖ All tests passed!'}
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  visual-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev
          cd frontend && pnpm install

      - name: Start services
        run: |
          poetry run uvicorn src.dotmac.platform.main:app --host 0.0.0.0 --port 8000 &
          cd frontend && pnpm dev:base-app &
          sleep 15

      - name: Run visual regression tests
        working-directory: frontend/e2e
        run: pnpm test tests/visual/ --project=chromium
        continue-on-error: true

      - name: Upload visual diff artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-diffs
          path: frontend/e2e/test-results/

  performance-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev
          cd frontend && pnpm install

      - name: Start services
        run: |
          poetry run uvicorn src.dotmac.platform.main:app --host 0.0.0.0 --port 8000 &
          cd frontend && pnpm dev:base-app &
          sleep 15

      - name: Run performance tests
        working-directory: frontend/e2e
        run: pnpm test tests/performance/ --project=chromium

      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: frontend/e2e/test-results/

  notify-failure:
    runs-on: ubuntu-latest
    needs: [e2e-tests, merge-reports]
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify team of E2E test failure
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® E2E Tests Failed on ${context.ref}`,
              body: `E2E tests failed on the main branch.

              **Run:** ${context.runId}
              **Commit:** ${context.sha}
              **Workflow:** ${context.workflow}

              Please investigate and fix the failing tests.`,
              labels: ['bug', 'e2e-failure', 'urgent']
            });