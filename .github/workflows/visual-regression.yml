name: Visual Regression Testing (Playwright)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/apps/base-app/**'
      - 'frontend/shared/packages/**'
      - '.github/workflows/visual-regression.yml'
  pull_request:
    paths:
      - 'frontend/apps/base-app/**'
      - 'frontend/shared/packages/**'
      - '.github/workflows/visual-regression.yml'

# Cancel in-progress runs for the same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  visual-tests:
    name: Run Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend/apps/base-app
        run: pnpm exec playwright install --with-deps chromium

      - name: Build frontend
        working-directory: frontend/apps/base-app
        run: pnpm run build

      - name: Run visual regression tests
        working-directory: frontend/apps/base-app
        run: pnpm exec playwright test e2e/visual.spec.ts --project=chromium
        continue-on-error: true
        id: visual_tests

      - name: Upload visual test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: visual-test-results
          path: |
            frontend/apps/base-app/playwright-report/
            frontend/apps/base-app/test-results/
          retention-days: 30

      - name: Upload screenshot baselines (on main branch)
        if: github.ref == 'refs/heads/main' && always()
        uses: actions/upload-artifact@v3
        with:
          name: screenshot-baselines-${{ github.sha }}
          path: frontend/apps/base-app/e2e/__screenshots__/
          retention-days: 90

      - name: Comment PR with visual test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const testPassed = '${{ steps.visual_tests.outcome }}' === 'success';

            const body = testPassed
              ? '✅ **Visual regression tests passed!**\n\nNo visual changes detected.'
              : '⚠️ **Visual regression tests detected changes!**\n\nPlease review the visual differences in the [test report artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).\n\n**Next steps:**\n1. Download the `visual-test-results` artifact\n2. Open `playwright-report/index.html` to review differences\n3. If changes are intentional, update baselines: `pnpm exec playwright test --update-snapshots`';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Fail workflow if visual tests failed
        if: steps.visual_tests.outcome == 'failure'
        run: exit 1
