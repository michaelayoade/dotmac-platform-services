version: '3.8'

# Performance Monitoring Stack
# Comprehensive monitoring for application performance

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: dotmac-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dotmac-grafana
    restart: unless-stopped
    ports:
      - "3400:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL:-http://localhost:3400}
      GF_ANALYTICS_REPORTING_ENABLED: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitoring
    depends_on:
      - prometheus

  # AlertManager - Alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: dotmac-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: dotmac-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: dotmac-cadvisor
    restart: unless-stopped
    ports:
      - "8085:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: dotmac-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-dotmac_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-dotmac_prod}?sslmode=disable"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"
      PG_EXPORTER_INCLUDE_DATABASES: "dotmac_prod"
    networks:
      - monitoring
    depends_on:
      - postgres

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: dotmac-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
    networks:
      - monitoring
    depends_on:
      - redis

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: dotmac-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:latest
    container_name: dotmac-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

  # Tempo - Distributed tracing
  tempo:
    image: grafana/tempo:latest
    container_name: dotmac-tempo
    restart: unless-stopped
    ports:
      - "3200:3200"   # Tempo query frontend
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    volumes:
      - ./monitoring/tempo/tempo-config.yml:/etc/tempo.yaml:ro
      - tempo_data:/tmp/tempo
    command: ["-config.file=/etc/tempo.yaml"]
    networks:
      - monitoring

  # Application Performance Monitoring (APM) Server
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.3
    container_name: dotmac-apm-server
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      OUTPUT_ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTIC_APM_SECRET_TOKEN: ${APM_SECRET_TOKEN:-}
    volumes:
      - ./monitoring/apm/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  # Elasticsearch - For APM data storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: dotmac-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - monitoring

  # Kibana - For APM visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: dotmac-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  # Performance Testing - K6
  k6:
    image: grafana/k6:latest
    container_name: dotmac-k6
    volumes:
      - ./monitoring/k6/scripts:/scripts:ro
    environment:
      K6_OUT: influxdb=http://influxdb:8086/k6
    networks:
      - monitoring
    profiles:
      - performance-test

  # InfluxDB - For K6 metrics
  influxdb:
    image: influxdb:1.8
    container_name: dotmac-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: k6
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring

  # Statsd Exporter - For custom application metrics
  statsd-exporter:
    image: prom/statsd-exporter:latest
    container_name: dotmac-statsd-exporter
    restart: unless-stopped
    ports:
      - "9102:9102"  # Metrics endpoint
      - "9125:9125/udp"  # StatsD UDP
      - "9125:9125/tcp"  # StatsD TCP
    volumes:
      - ./monitoring/statsd/mapping.yml:/tmp/statsd_mapping.yml:ro
    command:
      - '--statsd.mapping-config=/tmp/statsd_mapping.yml'
      - '--statsd.listen-udp=:9125'
      - '--statsd.listen-tcp=:9125'
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:
  tempo_data:
  elasticsearch_data:
  influxdb_data:

networks:
  monitoring:
    name: dotmac-monitoring
    driver: bridge