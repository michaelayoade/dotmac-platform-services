"""Initial schema from models

Revision ID: 51aa0da58b97
Revises: 
Create Date: 2025-10-07 08:06:36.558765

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "51aa0da58b97"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit_activities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("activity_type", sa.String(length=100), nullable=False),
        sa.Column("severity", sa.String(length=20), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("resource_type", sa.String(length=100), nullable=True),
        sa.Column("resource_id", sa.String(length=255), nullable=True),
        sa.Column("action", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("request_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_audit_activities_activity_type"),
        "audit_activities",
        ["activity_type"],
        unique=False,
    )
    op.create_index(op.f("ix_audit_activities_id"), "audit_activities", ["id"], unique=False)
    op.create_index(
        op.f("ix_audit_activities_severity"), "audit_activities", ["severity"], unique=False
    )
    op.create_index(
        "ix_audit_activities_severity_timestamp",
        "audit_activities",
        ["severity", "timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_audit_activities_tenant_id"), "audit_activities", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_audit_activities_tenant_timestamp",
        "audit_activities",
        ["tenant_id", "timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_audit_activities_timestamp"), "audit_activities", ["timestamp"], unique=False
    )
    op.create_index(
        "ix_audit_activities_type_timestamp",
        "audit_activities",
        ["activity_type", "timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_audit_activities_user_id"), "audit_activities", ["user_id"], unique=False
    )
    op.create_index(
        "ix_audit_activities_user_timestamp",
        "audit_activities",
        ["user_id", "timestamp"],
        unique=False,
    )
    op.create_table(
        "backup_codes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("code_hash", sa.String(length=255), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column("used_at", sa.DateTime(), nullable=True),
        sa.Column("used_ip", sa.String(length=45), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_backup_codes_tenant_id"), "backup_codes", ["tenant_id"], unique=False)
    op.create_index(op.f("ix_backup_codes_user_id"), "backup_codes", ["user_id"], unique=False)
    op.create_table(
        "billing_pricing_rules",
        sa.Column("rule_id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("applies_to_product_ids", sa.JSON(), nullable=False),
        sa.Column("applies_to_categories", sa.JSON(), nullable=False),
        sa.Column("applies_to_all", sa.Boolean(), nullable=False),
        sa.Column("min_quantity", sa.Numeric(precision=10, scale=0), nullable=True),
        sa.Column("customer_segments", sa.JSON(), nullable=False),
        sa.Column("discount_type", sa.String(length=20), nullable=False),
        sa.Column("discount_value", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("starts_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ends_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("max_uses", sa.Numeric(precision=10, scale=0), nullable=True),
        sa.Column("current_uses", sa.Numeric(precision=10, scale=0), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("rule_id", "id"),
    )
    op.create_index(
        op.f("ix_billing_pricing_rules_tenant_id"),
        "billing_pricing_rules",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        "ix_billing_rules_starts_ends",
        "billing_pricing_rules",
        ["starts_at", "ends_at"],
        unique=False,
    )
    op.create_index(
        "ix_billing_rules_tenant_active",
        "billing_pricing_rules",
        ["tenant_id", "is_active"],
        unique=False,
    )
    op.create_table(
        "billing_product_categories",
        sa.Column("category_id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("default_tax_class", sa.String(length=20), nullable=False),
        sa.Column("sort_order", sa.Numeric(precision=10, scale=0), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("category_id", "id"),
    )
    op.create_index(
        "ix_billing_categories_sort",
        "billing_product_categories",
        ["tenant_id", "sort_order"],
        unique=False,
    )
    op.create_index(
        "ix_billing_categories_tenant_name",
        "billing_product_categories",
        ["tenant_id", "name"],
        unique=True,
    )
    op.create_index(
        op.f("ix_billing_product_categories_tenant_id"),
        "billing_product_categories",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "billing_products",
        sa.Column("product_id", sa.String(length=50), nullable=False),
        sa.Column("sku", sa.String(length=100), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=False),
        sa.Column("product_type", sa.String(length=20), nullable=False),
        sa.Column("base_price", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("tax_class", sa.String(length=20), nullable=False),
        sa.Column("usage_type", sa.String(length=50), nullable=True),
        sa.Column("usage_unit_name", sa.String(length=50), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("product_id", "id"),
    )
    op.create_index(
        "ix_billing_products_tenant_active",
        "billing_products",
        ["tenant_id", "is_active"],
        unique=False,
    )
    op.create_index(
        "ix_billing_products_tenant_category",
        "billing_products",
        ["tenant_id", "category"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_products_tenant_id"), "billing_products", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_billing_products_tenant_sku", "billing_products", ["tenant_id", "sku"], unique=True
    )
    op.create_index(
        "ix_billing_products_tenant_type",
        "billing_products",
        ["tenant_id", "product_type"],
        unique=False,
    )
    op.create_table(
        "billing_rule_usage",
        sa.Column("usage_id", sa.String(length=50), nullable=False),
        sa.Column("rule_id", sa.String(length=50), nullable=False),
        sa.Column("customer_id", sa.String(length=50), nullable=False),
        sa.Column("invoice_id", sa.String(length=50), nullable=True),
        sa.Column("used_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("usage_id", "id"),
    )
    op.create_index(
        "ix_billing_rule_usage_tenant_customer",
        "billing_rule_usage",
        ["tenant_id", "customer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_rule_usage_tenant_id"), "billing_rule_usage", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_billing_rule_usage_tenant_rule",
        "billing_rule_usage",
        ["tenant_id", "rule_id"],
        unique=False,
    )
    op.create_index(
        "ix_billing_rule_usage_used_at", "billing_rule_usage", ["used_at"], unique=False
    )
    op.create_table(
        "billing_subscription_events",
        sa.Column("event_id", sa.String(length=50), nullable=False),
        sa.Column("subscription_id", sa.String(length=50), nullable=False),
        sa.Column("event_type", sa.String(length=50), nullable=False),
        sa.Column("event_data", sa.JSON(), nullable=False),
        sa.Column("user_id", sa.String(length=50), nullable=True),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("event_id", "id"),
    )
    op.create_index(
        "ix_billing_events_created", "billing_subscription_events", ["created_at"], unique=False
    )
    op.create_index(
        "ix_billing_events_tenant_subscription",
        "billing_subscription_events",
        ["tenant_id", "subscription_id"],
        unique=False,
    )
    op.create_index(
        "ix_billing_events_tenant_type",
        "billing_subscription_events",
        ["tenant_id", "event_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_subscription_events_tenant_id"),
        "billing_subscription_events",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "billing_subscription_plans",
        sa.Column("plan_id", sa.String(length=50), nullable=False),
        sa.Column("product_id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("billing_cycle", sa.String(length=20), nullable=False),
        sa.Column("price", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("setup_fee", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.Column("trial_days", sa.Numeric(precision=10, scale=0), nullable=True),
        sa.Column("included_usage", sa.JSON(), nullable=False),
        sa.Column("overage_rates", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("plan_id", "id"),
    )
    op.create_index(
        "ix_billing_plans_tenant_active",
        "billing_subscription_plans",
        ["tenant_id", "is_active"],
        unique=False,
    )
    op.create_index(
        "ix_billing_plans_tenant_product",
        "billing_subscription_plans",
        ["tenant_id", "product_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_subscription_plans_tenant_id"),
        "billing_subscription_plans",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "billing_subscriptions",
        sa.Column("subscription_id", sa.String(length=50), nullable=False),
        sa.Column("customer_id", sa.String(length=50), nullable=False),
        sa.Column("plan_id", sa.String(length=50), nullable=False),
        sa.Column("current_period_start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("current_period_end", sa.DateTime(timezone=True), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("trial_end", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cancel_at_period_end", sa.Boolean(), nullable=False),
        sa.Column("canceled_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("custom_price", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.Column("usage_records", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("subscription_id", "id"),
    )
    op.create_index(
        "ix_billing_subscriptions_period_end",
        "billing_subscriptions",
        ["current_period_end"],
        unique=False,
    )
    op.create_index(
        "ix_billing_subscriptions_tenant_customer",
        "billing_subscriptions",
        ["tenant_id", "customer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_subscriptions_tenant_id"),
        "billing_subscriptions",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        "ix_billing_subscriptions_tenant_plan",
        "billing_subscriptions",
        ["tenant_id", "plan_id"],
        unique=False,
    )
    op.create_index(
        "ix_billing_subscriptions_tenant_status",
        "billing_subscriptions",
        ["tenant_id", "status"],
        unique=False,
    )
    op.create_table(
        "cash_registers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("register_id", sa.String(length=50), nullable=False),
        sa.Column("register_name", sa.String(length=100), nullable=False),
        sa.Column("location", sa.String(length=200), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("current_float", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("last_reconciled", sa.DateTime(timezone=True), nullable=True),
        sa.Column("requires_daily_reconciliation", sa.Boolean(), nullable=False),
        sa.Column("max_cash_limit", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("register_id"),
    )
    op.create_index("idx_cash_register_active", "cash_registers", ["is_active"], unique=False)
    op.create_index("idx_cash_register_tenant", "cash_registers", ["tenant_id"], unique=False)
    op.create_index(
        op.f("ix_cash_registers_tenant_id"), "cash_registers", ["tenant_id"], unique=False
    )
    op.create_table(
        "communication_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("EMAIL", "WEBHOOK", "SMS", "PUSH", name="communicationtype"),
            nullable=False,
        ),
        sa.Column("recipient", sa.String(length=500), nullable=False),
        sa.Column("sender", sa.String(length=500), nullable=True),
        sa.Column("subject", sa.String(length=500), nullable=True),
        sa.Column("text_body", sa.Text(), nullable=True),
        sa.Column("html_body", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "SENT",
                "DELIVERED",
                "FAILED",
                "BOUNCED",
                "CANCELLED",
                name="communicationstatus",
            ),
            nullable=False,
        ),
        sa.Column("sent_at", sa.DateTime(), nullable=True),
        sa.Column("delivered_at", sa.DateTime(), nullable=True),
        sa.Column("failed_at", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=100), nullable=True),
        sa.Column("provider_message_id", sa.String(length=500), nullable=True),
        sa.Column("template_id", sa.String(length=255), nullable=True),
        sa.Column("template_name", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("job_id", sa.String(length=255), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("headers", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_communication_logs_job_id"), "communication_logs", ["job_id"], unique=False
    )
    op.create_index(
        op.f("ix_communication_logs_recipient"), "communication_logs", ["recipient"], unique=False
    )
    op.create_index(
        op.f("ix_communication_logs_status"), "communication_logs", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_communication_logs_tenant_id"), "communication_logs", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_communication_logs_type"), "communication_logs", ["type"], unique=False
    )
    op.create_index(
        op.f("ix_communication_logs_user_id"), "communication_logs", ["user_id"], unique=False
    )
    op.create_table(
        "communication_stats",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("stats_date", sa.DateTime(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("EMAIL", "WEBHOOK", "SMS", "PUSH", name="communicationtype"),
            nullable=False,
        ),
        sa.Column("total_sent", sa.Integer(), nullable=False),
        sa.Column("total_delivered", sa.Integer(), nullable=False),
        sa.Column("total_failed", sa.Integer(), nullable=False),
        sa.Column("total_bounced", sa.Integer(), nullable=False),
        sa.Column("total_pending", sa.Integer(), nullable=False),
        sa.Column("avg_delivery_time_seconds", sa.Float(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_communication_stats_stats_date"),
        "communication_stats",
        ["stats_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_communication_stats_tenant_id"), "communication_stats", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_communication_stats_type"), "communication_stats", ["type"], unique=False
    )
    op.create_table(
        "communication_templates",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "type",
            sa.Enum("EMAIL", "WEBHOOK", "SMS", "PUSH", name="communicationtype"),
            nullable=False,
        ),
        sa.Column("subject_template", sa.Text(), nullable=True),
        sa.Column("text_template", sa.Text(), nullable=True),
        sa.Column("html_template", sa.Text(), nullable=True),
        sa.Column("variables", sa.JSON(), nullable=False),
        sa.Column("required_variables", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("last_used_at", sa.DateTime(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_communication_templates_name"), "communication_templates", ["name"], unique=True
    )
    op.create_index(
        op.f("ix_communication_templates_tenant_id"),
        "communication_templates",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "company_bank_accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_name", sa.String(length=200), nullable=False),
        sa.Column("account_nickname", sa.String(length=100), nullable=True),
        sa.Column("bank_name", sa.String(length=200), nullable=False),
        sa.Column("bank_address", sa.Text(), nullable=True),
        sa.Column("bank_country", sa.String(length=2), nullable=False),
        sa.Column("account_number_encrypted", sa.Text(), nullable=False),
        sa.Column("account_number_last_four", sa.String(length=4), nullable=False),
        sa.Column("routing_number", sa.String(length=50), nullable=True),
        sa.Column("swift_code", sa.String(length=11), nullable=True),
        sa.Column("iban", sa.String(length=34), nullable=True),
        sa.Column(
            "account_type",
            sa.Enum("CHECKING", "SAVINGS", "BUSINESS", "MONEY_MARKET", name="accounttype"),
            nullable=False,
        ),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "VERIFIED", "FAILED", "SUSPENDED", name="bankaccountstatus"),
            nullable=False,
        ),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("accepts_deposits", sa.Boolean(), nullable=False),
        sa.Column("verified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("verified_by", sa.String(length=255), nullable=True),
        sa.Column("verification_notes", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("updated_by", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_company_bank_primary",
        "company_bank_accounts",
        ["tenant_id", "is_primary"],
        unique=False,
    )
    op.create_index("idx_company_bank_status", "company_bank_accounts", ["status"], unique=False)
    op.create_index("idx_company_bank_tenant", "company_bank_accounts", ["tenant_id"], unique=False)
    op.create_index(
        op.f("ix_company_bank_accounts_tenant_id"),
        "company_bank_accounts",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "credit_notes",
        sa.Column("credit_note_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("credit_note_number", sa.String(length=50), nullable=True),
        sa.Column("idempotency_key", sa.String(length=255), nullable=True),
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column("invoice_id", sa.UUID(as_uuid=False), nullable=True),
        sa.Column("issue_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("subtotal", sa.Integer(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("total_amount", sa.Integer(), nullable=False),
        sa.Column(
            "credit_type",
            sa.Enum(
                "REFUND",
                "ADJUSTMENT",
                "WRITE_OFF",
                "DISCOUNT",
                "ERROR_CORRECTION",
                "OVERPAYMENT",
                "GOODWILL",
                name="credittype",
            ),
            nullable=False,
        ),
        sa.Column(
            "reason",
            sa.Enum(
                "CUSTOMER_REQUEST",
                "BILLING_ERROR",
                "PRODUCT_DEFECT",
                "SERVICE_ISSUE",
                "DUPLICATE_CHARGE",
                "CANCELLATION",
                "GOODWILL",
                "OVERPAYMENT_REFUND",
                "PRICE_ADJUSTMENT",
                "TAX_ADJUSTMENT",
                "ORDER_CHANGE",
                "OTHER",
                name="creditreason",
            ),
            nullable=False,
        ),
        sa.Column("reason_description", sa.String(length=500), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT", "ISSUED", "APPLIED", "VOIDED", "PARTIALLY_APPLIED", name="creditnotestatus"
            ),
            nullable=False,
        ),
        sa.Column("auto_apply_to_invoice", sa.Boolean(), nullable=False),
        sa.Column("remaining_credit_amount", sa.Integer(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("internal_notes", sa.Text(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("voided_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("updated_by", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("credit_note_id"),
        sa.UniqueConstraint("tenant_id", "idempotency_key", name="uq_credit_note_idempotency"),
    )
    op.create_index(
        "idx_credit_note_tenant_customer",
        "credit_notes",
        ["tenant_id", "customer_id"],
        unique=False,
    )
    op.create_index(
        "idx_credit_note_tenant_status", "credit_notes", ["tenant_id", "status"], unique=False
    )
    op.create_index(
        op.f("ix_credit_notes_credit_note_number"),
        "credit_notes",
        ["credit_note_number"],
        unique=True,
    )
    op.create_index(
        op.f("ix_credit_notes_customer_id"), "credit_notes", ["customer_id"], unique=False
    )
    op.create_index(
        op.f("ix_credit_notes_idempotency_key"), "credit_notes", ["idempotency_key"], unique=False
    )
    op.create_index(
        op.f("ix_credit_notes_invoice_id"), "credit_notes", ["invoice_id"], unique=False
    )
    op.create_index(op.f("ix_credit_notes_status"), "credit_notes", ["status"], unique=False)
    op.create_index(op.f("ix_credit_notes_tenant_id"), "credit_notes", ["tenant_id"], unique=False)
    op.create_table(
        "customer_credits",
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=False),
        sa.Column("total_credit_amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("credit_notes", sa.JSON(), nullable=False),
        sa.Column("auto_apply_to_new_invoices", sa.Boolean(), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("customer_id", "tenant_id"),
    )
    op.create_index(
        "idx_customer_credit_tenant", "customer_credits", ["tenant_id", "customer_id"], unique=False
    )
    op.create_table(
        "customer_segments",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("criteria", sa.JSON(), nullable=False, comment="Segmentation criteria/rules"),
        sa.Column("is_dynamic", sa.Boolean(), nullable=False, comment="Auto-update membership"),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("member_count", sa.Integer(), nullable=False),
        sa.Column("last_calculated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "name", name="uq_tenant_segment_name"),
    )
    op.create_index(
        op.f("ix_customer_segments_tenant_id"), "customer_segments", ["tenant_id"], unique=False
    )
    op.create_table(
        "email_verification_tokens",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_hash", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column("used_at", sa.DateTime(), nullable=True),
        sa.Column("used_ip", sa.String(length=45), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_email_verification_tokens_tenant_id"),
        "email_verification_tokens",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_email_verification_tokens_token_hash"),
        "email_verification_tokens",
        ["token_hash"],
        unique=True,
    )
    op.create_index(
        op.f("ix_email_verification_tokens_user_id"),
        "email_verification_tokens",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "invoices",
        sa.Column("invoice_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("invoice_number", sa.String(length=50), nullable=True),
        sa.Column("idempotency_key", sa.String(length=255), nullable=True),
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column("billing_email", sa.String(length=255), nullable=False),
        sa.Column("billing_address", sa.JSON(), nullable=False),
        sa.Column("issue_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("due_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("subtotal", sa.Integer(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("discount_amount", sa.Integer(), nullable=False),
        sa.Column("total_amount", sa.Integer(), nullable=False),
        sa.Column("total_credits_applied", sa.Integer(), nullable=False),
        sa.Column("remaining_balance", sa.Integer(), nullable=False),
        sa.Column("credit_applications", sa.JSON(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT", "OPEN", "PAID", "VOID", "OVERDUE", "PARTIALLY_PAID", name="invoicestatus"
            ),
            nullable=False,
        ),
        sa.Column(
            "payment_status",
            sa.Enum(
                "PENDING",
                "PROCESSING",
                "SUCCEEDED",
                "FAILED",
                "REFUNDED",
                "PARTIALLY_REFUNDED",
                "CANCELLED",
                name="paymentstatus",
            ),
            nullable=False,
        ),
        sa.Column("subscription_id", sa.String(length=255), nullable=True),
        sa.Column("proforma_invoice_id", sa.String(length=255), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("internal_notes", sa.Text(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("paid_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("voided_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("updated_by", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("invoice_id"),
        sa.UniqueConstraint("tenant_id", "idempotency_key", name="uq_invoice_idempotency"),
    )
    op.create_index(
        "idx_invoice_tenant_customer", "invoices", ["tenant_id", "customer_id"], unique=False
    )
    op.create_index(
        "idx_invoice_tenant_due_date", "invoices", ["tenant_id", "due_date"], unique=False
    )
    op.create_index("idx_invoice_tenant_status", "invoices", ["tenant_id", "status"], unique=False)
    op.create_index(op.f("ix_invoices_customer_id"), "invoices", ["customer_id"], unique=False)
    op.create_index(op.f("ix_invoices_due_date"), "invoices", ["due_date"], unique=False)
    op.create_index(
        op.f("ix_invoices_idempotency_key"), "invoices", ["idempotency_key"], unique=False
    )
    op.create_index(op.f("ix_invoices_invoice_number"), "invoices", ["invoice_number"], unique=True)
    op.create_index(
        op.f("ix_invoices_payment_status"), "invoices", ["payment_status"], unique=False
    )
    op.create_index(op.f("ix_invoices_status"), "invoices", ["status"], unique=False)
    op.create_index(
        op.f("ix_invoices_subscription_id"), "invoices", ["subscription_id"], unique=False
    )
    op.create_index(op.f("ix_invoices_tenant_id"), "invoices", ["tenant_id"], unique=False)
    op.create_table(
        "manual_payments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("payment_reference", sa.String(length=100), nullable=False),
        sa.Column("external_reference", sa.String(length=255), nullable=True),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("invoice_id", sa.String(length=255), nullable=True),
        sa.Column("bank_account_id", sa.Integer(), nullable=True),
        sa.Column(
            "payment_method",
            sa.Enum(
                "BANK_TRANSFER",
                "WIRE_TRANSFER",
                "ACH",
                "CASH",
                "CHECK",
                "MONEY_ORDER",
                "MOBILE_MONEY",
                "CRYPTO",
                "OTHER",
                name="paymentmethodtype",
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("payment_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("received_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cleared_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cash_register_id", sa.String(length=50), nullable=True),
        sa.Column("cashier_name", sa.String(length=100), nullable=True),
        sa.Column("check_number", sa.String(length=50), nullable=True),
        sa.Column("check_bank_name", sa.String(length=200), nullable=True),
        sa.Column("sender_name", sa.String(length=200), nullable=True),
        sa.Column("sender_bank", sa.String(length=200), nullable=True),
        sa.Column("sender_account_last_four", sa.String(length=4), nullable=True),
        sa.Column("mobile_number", sa.String(length=20), nullable=True),
        sa.Column("mobile_provider", sa.String(length=50), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("reconciled", sa.Boolean(), nullable=False),
        sa.Column("reconciled_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("reconciled_by", sa.String(length=255), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("receipt_url", sa.String(length=500), nullable=True),
        sa.Column("attachments", sa.JSON(), nullable=False),
        sa.Column("recorded_by", sa.String(length=255), nullable=False),
        sa.Column("approved_by", sa.String(length=255), nullable=True),
        sa.Column("approved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("updated_by", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("payment_reference"),
    )
    op.create_index("idx_manual_payment_customer", "manual_payments", ["customer_id"], unique=False)
    op.create_index("idx_manual_payment_date", "manual_payments", ["payment_date"], unique=False)
    op.create_index("idx_manual_payment_invoice", "manual_payments", ["invoice_id"], unique=False)
    op.create_index(
        "idx_manual_payment_method", "manual_payments", ["payment_method"], unique=False
    )
    op.create_index("idx_manual_payment_status", "manual_payments", ["status"], unique=False)
    op.create_index("idx_manual_payment_tenant", "manual_payments", ["tenant_id"], unique=False)
    op.create_index(
        op.f("ix_manual_payments_tenant_id"), "manual_payments", ["tenant_id"], unique=False
    )
    op.create_table(
        "payment_methods",
        sa.Column("payment_method_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "CARD",
                "BANK_ACCOUNT",
                "DIGITAL_WALLET",
                "CRYPTO",
                "CHECK",
                "WIRE_TRANSFER",
                "CASH",
                name="paymentmethodtype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE",
                "INACTIVE",
                "EXPIRED",
                "REQUIRES_VERIFICATION",
                "VERIFICATION_FAILED",
                name="paymentmethodstatus",
            ),
            nullable=False,
        ),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("provider_payment_method_id", sa.String(length=255), nullable=False),
        sa.Column("display_name", sa.String(length=100), nullable=False),
        sa.Column("last_four", sa.String(length=4), nullable=True),
        sa.Column("brand", sa.String(length=50), nullable=True),
        sa.Column("expiry_month", sa.Integer(), nullable=True),
        sa.Column("expiry_year", sa.Integer(), nullable=True),
        sa.Column("bank_name", sa.String(length=100), nullable=True),
        sa.Column(
            "account_type",
            sa.Enum(
                "CHECKING",
                "SAVINGS",
                "BUSINESS_CHECKING",
                "BUSINESS_SAVINGS",
                name="bankaccounttype",
            ),
            nullable=True,
        ),
        sa.Column("routing_number_last_four", sa.String(length=4), nullable=True),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("auto_pay_enabled", sa.Boolean(), nullable=False),
        sa.Column("verified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("payment_method_id"),
    )
    op.create_index(
        "idx_payment_method_tenant_customer",
        "payment_methods",
        ["tenant_id", "customer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payment_methods_customer_id"), "payment_methods", ["customer_id"], unique=False
    )
    op.create_index(
        op.f("ix_payment_methods_tenant_id"), "payment_methods", ["tenant_id"], unique=False
    )
    op.create_table(
        "payments",
        sa.Column("payment_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("idempotency_key", sa.String(length=255), nullable=True),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "PROCESSING",
                "SUCCEEDED",
                "FAILED",
                "REFUNDED",
                "PARTIALLY_REFUNDED",
                "CANCELLED",
                name="paymentstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "payment_method_type",
            sa.Enum(
                "CARD",
                "BANK_ACCOUNT",
                "DIGITAL_WALLET",
                "CRYPTO",
                "CHECK",
                "WIRE_TRANSFER",
                "CASH",
                name="paymentmethodtype",
            ),
            nullable=False,
        ),
        sa.Column("payment_method_details", sa.JSON(), nullable=False),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("provider_payment_id", sa.String(length=255), nullable=True),
        sa.Column("provider_fee", sa.Integer(), nullable=True),
        sa.Column("failure_reason", sa.String(length=500), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("next_retry_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("processed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("payment_id"),
        sa.UniqueConstraint("tenant_id", "idempotency_key", name="uq_payment_idempotency"),
    )
    op.create_index(
        "idx_payment_tenant_customer", "payments", ["tenant_id", "customer_id"], unique=False
    )
    op.create_index("idx_payment_tenant_status", "payments", ["tenant_id", "status"], unique=False)
    op.create_index(op.f("ix_payments_customer_id"), "payments", ["customer_id"], unique=False)
    op.create_index(
        op.f("ix_payments_idempotency_key"), "payments", ["idempotency_key"], unique=False
    )
    op.create_index(
        op.f("ix_payments_provider_payment_id"), "payments", ["provider_payment_id"], unique=False
    )
    op.create_index(op.f("ix_payments_status"), "payments", ["status"], unique=False)
    op.create_index(op.f("ix_payments_tenant_id"), "payments", ["tenant_id"], unique=False)
    op.create_table(
        "permissions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["permissions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_permissions_name"), "permissions", ["name"], unique=True)
    op.create_table(
        "profile_change_history",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("changed_by_user_id", sa.UUID(), nullable=False),
        sa.Column("field_name", sa.String(length=100), nullable=False),
        sa.Column("old_value", sa.Text(), nullable=True),
        sa.Column("new_value", sa.Text(), nullable=True),
        sa.Column("change_reason", sa.String(length=255), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_profile_change_history_field_name"),
        "profile_change_history",
        ["field_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_profile_change_history_tenant_id"),
        "profile_change_history",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_profile_change_history_user_id"),
        "profile_change_history",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("max_users", sa.Integer(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roles_name"), "roles", ["name"], unique=True)
    op.create_table(
        "transactions",
        sa.Column("transaction_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum(
                "CHARGE",
                "PAYMENT",
                "REFUND",
                "CREDIT",
                "ADJUSTMENT",
                "FEE",
                "WRITE_OFF",
                "TAX",
                name="transactiontype",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("customer_id", sa.String(length=255), nullable=False),
        sa.Column("invoice_id", sa.UUID(as_uuid=False), nullable=True),
        sa.Column("payment_id", sa.UUID(as_uuid=False), nullable=True),
        sa.Column("credit_note_id", sa.UUID(as_uuid=False), nullable=True),
        sa.Column("transaction_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("transaction_id"),
    )
    op.create_index(
        "idx_transaction_tenant_customer",
        "transactions",
        ["tenant_id", "customer_id"],
        unique=False,
    )
    op.create_index(
        "idx_transaction_tenant_date",
        "transactions",
        ["tenant_id", "transaction_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_credit_note_id"), "transactions", ["credit_note_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_customer_id"), "transactions", ["customer_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_invoice_id"), "transactions", ["invoice_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_payment_id"), "transactions", ["payment_id"], unique=False
    )
    op.create_index(op.f("ix_transactions_tenant_id"), "transactions", ["tenant_id"], unique=False)
    op.create_index(
        op.f("ix_transactions_transaction_date"), "transactions", ["transaction_date"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_transaction_type"), "transactions", ["transaction_type"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("phone_verified", sa.Boolean(), nullable=False),
        sa.Column("bio", sa.Text(), nullable=True),
        sa.Column("website", sa.String(length=255), nullable=True),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("avatar_url", sa.String(length=500), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_platform_admin", sa.Boolean(), nullable=False),
        sa.Column("roles", sa.JSON(), nullable=False),
        sa.Column("permissions", sa.JSON(), nullable=False),
        sa.Column("mfa_enabled", sa.Boolean(), nullable=False),
        sa.Column("mfa_secret", sa.String(length=255), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("last_login_ip", sa.String(length=45), nullable=True),
        sa.Column("failed_login_attempts", sa.Integer(), nullable=False),
        sa.Column("locked_until", sa.DateTime(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "email", name="uq_users_tenant_email"),
        sa.UniqueConstraint("tenant_id", "username", name="uq_users_tenant_username"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_index(op.f("ix_users_tenant_id"), "users", ["tenant_id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=False)
    op.create_table(
        "webhook_subscriptions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("events", sa.JSON(), nullable=False),
        sa.Column("secret", sa.String(length=255), nullable=False),
        sa.Column("headers", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("retry_enabled", sa.Boolean(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("timeout_seconds", sa.Integer(), nullable=False),
        sa.Column("success_count", sa.Integer(), nullable=False),
        sa.Column("failure_count", sa.Integer(), nullable=False),
        sa.Column("last_triggered_at", sa.DateTime(), nullable=True),
        sa.Column("last_success_at", sa.DateTime(), nullable=True),
        sa.Column("last_failure_at", sa.DateTime(), nullable=True),
        sa.Column("custom_metadata", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_webhook_subscriptions_tenant_id"),
        "webhook_subscriptions",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "cash_reconciliations",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("register_id", sa.String(length=50), nullable=False),
        sa.Column("reconciliation_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("opening_float", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("closing_float", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("expected_cash", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("actual_cash", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("discrepancy", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("reconciled_by", sa.String(length=255), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("shift_id", sa.String(length=50), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["register_id"],
            ["cash_registers.register_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cash_reconciliations_tenant_id"),
        "cash_reconciliations",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "cash_transactions",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("register_id", sa.String(length=50), nullable=False),
        sa.Column("transaction_type", sa.String(length=50), nullable=False),
        sa.Column("amount", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("balance_after", sa.Numeric(precision=19, scale=4), nullable=False),
        sa.Column("reference", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=False),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["register_id"],
            ["cash_registers.register_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cash_transactions_tenant_id"), "cash_transactions", ["tenant_id"], unique=False
    )
    op.create_table(
        "contact_field_definitions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("field_key", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("field_type", sa.String(length=50), nullable=False),
        sa.Column("is_required", sa.Boolean(), nullable=False),
        sa.Column("is_unique", sa.Boolean(), nullable=False),
        sa.Column("is_searchable", sa.Boolean(), nullable=False),
        sa.Column("default_value", sa.JSON(), nullable=True),
        sa.Column("validation_rules", sa.JSON(), nullable=True),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column("placeholder", sa.String(length=255), nullable=True),
        sa.Column("help_text", sa.Text(), nullable=True),
        sa.Column("field_group", sa.String(length=100), nullable=True),
        sa.Column("is_visible", sa.Boolean(), nullable=False),
        sa.Column("is_editable", sa.Boolean(), nullable=False),
        sa.Column("required_permission", sa.String(length=100), nullable=True),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("is_encrypted", sa.Boolean(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "field_key", name="uq_tenant_field_key"),
    )
    op.create_index(
        "ix_contact_field_definitions_field_group",
        "contact_field_definitions",
        ["field_group"],
        unique=False,
    )
    op.create_index(
        "ix_contact_field_definitions_field_key",
        "contact_field_definitions",
        ["field_key"],
        unique=False,
    )
    op.create_index(
        "ix_contact_field_definitions_tenant_id",
        "contact_field_definitions",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "contact_label_definitions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("slug", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("color", sa.String(length=7), nullable=True),
        sa.Column("icon", sa.String(length=50), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column("is_visible", sa.Boolean(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "slug", name="uq_tenant_label_slug"),
    )
    op.create_index(
        "ix_contact_label_definitions_category",
        "contact_label_definitions",
        ["category"],
        unique=False,
    )
    op.create_index(
        "ix_contact_label_definitions_slug", "contact_label_definitions", ["slug"], unique=False
    )
    op.create_index(
        "ix_contact_label_definitions_tenant_id",
        "contact_label_definitions",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "credit_applications",
        sa.Column("application_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("credit_note_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column(
            "applied_to_type",
            sa.Enum("INVOICE", "CUSTOMER_ACCOUNT", "REFUND", name="creditapplicationtype"),
            nullable=False,
        ),
        sa.Column("applied_to_id", sa.String(length=255), nullable=False),
        sa.Column("applied_amount", sa.Integer(), nullable=False),
        sa.Column("application_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("applied_by", sa.String(length=255), nullable=False),
        sa.Column("notes", sa.String(length=500), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["credit_note_id"],
            ["credit_notes.credit_note_id"],
        ),
        sa.PrimaryKeyConstraint("application_id"),
    )
    op.create_index(
        "idx_credit_application_tenant_target",
        "credit_applications",
        ["tenant_id", "applied_to_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_credit_applications_applied_to_id"),
        "credit_applications",
        ["applied_to_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_credit_applications_tenant_id"), "credit_applications", ["tenant_id"], unique=False
    )
    op.create_table(
        "credit_note_line_items",
        sa.Column("line_item_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("credit_note_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("unit_price", sa.Integer(), nullable=False),
        sa.Column("total_price", sa.Integer(), nullable=False),
        sa.Column("original_invoice_line_item_id", sa.UUID(as_uuid=False), nullable=True),
        sa.Column("product_id", sa.String(length=255), nullable=True),
        sa.Column("tax_rate", sa.Float(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["credit_note_id"],
            ["credit_notes.credit_note_id"],
        ),
        sa.PrimaryKeyConstraint("line_item_id"),
    )
    op.create_table(
        "customers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "customer_number",
            sa.String(length=50),
            nullable=False,
            comment="Unique customer identifier for business operations",
        ),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("middle_name", sa.String(length=100), nullable=True),
        sa.Column("display_name", sa.String(length=200), nullable=True),
        sa.Column("company_name", sa.String(length=200), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PROSPECT",
                "ACTIVE",
                "INACTIVE",
                "SUSPENDED",
                "CHURNED",
                "ARCHIVED",
                name="customerstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "customer_type",
            sa.Enum(
                "INDIVIDUAL", "BUSINESS", "ENTERPRISE", "PARTNER", "VENDOR", name="customertype"
            ),
            nullable=False,
        ),
        sa.Column(
            "tier",
            sa.Enum("FREE", "BASIC", "STANDARD", "PREMIUM", "ENTERPRISE", name="customertier"),
            nullable=False,
        ),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("phone", sa.String(length=30), nullable=True),
        sa.Column("phone_verified", sa.Boolean(), nullable=False),
        sa.Column("mobile", sa.String(length=30), nullable=True),
        sa.Column("address_line1", sa.String(length=200), nullable=True),
        sa.Column("address_line2", sa.String(length=200), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("state_province", sa.String(length=100), nullable=True),
        sa.Column("postal_code", sa.String(length=20), nullable=True),
        sa.Column("country", sa.String(length=2), nullable=True),
        sa.Column("tax_id", sa.String(length=50), nullable=True),
        sa.Column("vat_number", sa.String(length=50), nullable=True),
        sa.Column("industry", sa.String(length=100), nullable=True),
        sa.Column("employee_count", sa.Integer(), nullable=True),
        sa.Column("annual_revenue", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.Column(
            "preferred_channel",
            sa.Enum("EMAIL", "SMS", "PHONE", "IN_APP", "PUSH", "MAIL", name="communicationchannel"),
            nullable=False,
        ),
        sa.Column("preferred_language", sa.String(length=10), nullable=False),
        sa.Column("timezone", sa.String(length=50), nullable=False),
        sa.Column("opt_in_marketing", sa.Boolean(), nullable=False),
        sa.Column("opt_in_updates", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True, comment="Link to auth user account"),
        sa.Column(
            "assigned_to",
            sa.UUID(),
            nullable=True,
            comment="Assigned account manager or support agent",
        ),
        sa.Column("segment_id", sa.UUID(), nullable=True),
        sa.Column("lifetime_value", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("total_purchases", sa.Integer(), nullable=False),
        sa.Column("last_purchase_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("first_purchase_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("average_order_value", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("credit_score", sa.Integer(), nullable=True),
        sa.Column("risk_score", sa.Integer(), nullable=False),
        sa.Column("satisfaction_score", sa.Integer(), nullable=True),
        sa.Column("net_promoter_score", sa.Integer(), nullable=True),
        sa.Column("acquisition_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("last_contact_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("birthday", sa.DateTime(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("custom_fields", sa.JSON(), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=False),
        sa.Column("external_id", sa.String(length=100), nullable=True),
        sa.Column("source_system", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("updated_by", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["assigned_to"], ["users.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["segment_id"], ["customer_segments.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "customer_number", name="uq_tenant_customer_number"),
        sa.UniqueConstraint("tenant_id", "email", name="uq_tenant_email"),
    )
    op.create_index(
        "ix_customer_location", "customers", ["country", "state_province", "city"], unique=False
    )
    op.create_index(
        "ix_customer_search", "customers", ["first_name", "last_name", "company_name"], unique=False
    )
    op.create_index("ix_customer_status_tier", "customers", ["status", "tier"], unique=False)
    op.create_index(
        op.f("ix_customers_customer_number"), "customers", ["customer_number"], unique=True
    )
    op.create_index(
        op.f("ix_customers_customer_type"), "customers", ["customer_type"], unique=False
    )
    op.create_index(op.f("ix_customers_email"), "customers", ["email"], unique=False)
    op.create_index(op.f("ix_customers_external_id"), "customers", ["external_id"], unique=False)
    op.create_index(op.f("ix_customers_status"), "customers", ["status"], unique=False)
    op.create_index(op.f("ix_customers_tenant_id"), "customers", ["tenant_id"], unique=False)
    op.create_index(op.f("ix_customers_tier"), "customers", ["tier"], unique=False)
    op.create_table(
        "data_import_jobs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "job_type",
            sa.Enum(
                "CUSTOMERS",
                "INVOICES",
                "SUBSCRIPTIONS",
                "PAYMENTS",
                "PRODUCTS",
                "MIXED",
                name="importjobtype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "VALIDATING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PARTIALLY_COMPLETED",
                "CANCELLED",
                name="importjobstatus",
            ),
            nullable=False,
        ),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=False),
        sa.Column("file_format", sa.String(length=20), nullable=False),
        sa.Column("total_records", sa.Integer(), nullable=False),
        sa.Column("processed_records", sa.Integer(), nullable=False),
        sa.Column("successful_records", sa.Integer(), nullable=False),
        sa.Column("failed_records", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("initiated_by", sa.UUID(), nullable=True),
        sa.Column("config", sa.JSON(), nullable=False, comment="Import configuration options"),
        sa.Column("summary", sa.JSON(), nullable=False, comment="Import summary and statistics"),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("celery_task_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["initiated_by"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_import_jobs_job_type"), "data_import_jobs", ["job_type"], unique=False
    )
    op.create_index(
        op.f("ix_data_import_jobs_status"), "data_import_jobs", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_data_import_jobs_tenant_id"), "data_import_jobs", ["tenant_id"], unique=False
    )
    op.create_index("ix_import_jobs_created", "data_import_jobs", ["created_at"], unique=False)
    op.create_index(
        "ix_import_jobs_tenant_status", "data_import_jobs", ["tenant_id", "status"], unique=False
    )
    op.create_index(
        "ix_import_jobs_tenant_type", "data_import_jobs", ["tenant_id", "job_type"], unique=False
    )
    op.create_table(
        "invoice_line_items",
        sa.Column("line_item_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("invoice_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("unit_price", sa.Integer(), nullable=False),
        sa.Column("total_price", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.String(length=255), nullable=True),
        sa.Column("subscription_id", sa.String(length=255), nullable=True),
        sa.Column("tax_rate", sa.Float(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("discount_percentage", sa.Float(), nullable=False),
        sa.Column("discount_amount", sa.Integer(), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invoice_id"],
            ["invoices.invoice_id"],
        ),
        sa.PrimaryKeyConstraint("line_item_id"),
    )
    op.create_table(
        "payment_invoices",
        sa.Column("payment_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("invoice_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("amount_applied", sa.Integer(), nullable=False),
        sa.Column("applied_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["invoice_id"],
            ["invoices.invoice_id"],
        ),
        sa.ForeignKeyConstraint(
            ["payment_id"],
            ["payments.payment_id"],
        ),
        sa.PrimaryKeyConstraint("payment_id", "invoice_id"),
    )
    op.create_table(
        "payment_reconciliations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reconciliation_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("period_start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("period_end", sa.DateTime(timezone=True), nullable=False),
        sa.Column("bank_account_id", sa.Integer(), nullable=False),
        sa.Column("opening_balance", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("closing_balance", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("statement_balance", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("total_deposits", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("total_withdrawals", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("unreconciled_count", sa.Integer(), nullable=False),
        sa.Column("discrepancy_amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("completed_by", sa.String(length=255), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("approved_by", sa.String(length=255), nullable=True),
        sa.Column("approved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("statement_file_url", sa.String(length=500), nullable=True),
        sa.Column("reconciled_items", sa.JSON(), nullable=False),
        sa.Column("meta_data", sa.JSON(), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["bank_account_id"],
            ["company_bank_accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_reconciliation_bank", "payment_reconciliations", ["bank_account_id"], unique=False
    )
    op.create_index(
        "idx_reconciliation_date", "payment_reconciliations", ["reconciliation_date"], unique=False
    )
    op.create_index(
        "idx_reconciliation_tenant", "payment_reconciliations", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_payment_reconciliations_tenant_id"),
        "payment_reconciliations",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "permission_grants",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("permission_id", sa.UUID(), nullable=True),
        sa.Column("action", sa.String(length=20), nullable=False),
        sa.Column("granted_by", sa.UUID(), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["granted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_permission_grants_created_at", "permission_grants", ["created_at"], unique=False
    )
    op.create_index(
        "ix_permission_grants_granted_by", "permission_grants", ["granted_by"], unique=False
    )
    op.create_index("ix_permission_grants_user_id", "permission_grants", ["user_id"], unique=False)
    op.create_table(
        "role_hierarchy",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("parent_role_id", sa.UUID(), nullable=False),
        sa.Column("child_role_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["child_role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("parent_role_id", "child_role_id", name="uq_role_hierarchy"),
    )
    op.create_index("ix_role_hierarchy_child", "role_hierarchy", ["child_role_id"], unique=False)
    op.create_index("ix_role_hierarchy_parent", "role_hierarchy", ["parent_role_id"], unique=False)
    op.create_table(
        "role_permissions",
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column(
            "granted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["permission_id"], ["permissions.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("role_id", "permission_id"),
        sa.UniqueConstraint("role_id", "permission_id", name="uq_role_permission"),
    )
    op.create_index("ix_role_permissions_role_id", "role_permissions", ["role_id"], unique=False)
    op.create_table(
        "user_permissions",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column("granted", sa.Boolean(), nullable=False),
        sa.Column(
            "granted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("granted_by", sa.UUID(), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["granted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["permission_id"], ["permissions.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "permission_id"),
        sa.UniqueConstraint("user_id", "permission_id", name="uq_user_permission"),
    )
    op.create_index("ix_user_permissions_user_id", "user_permissions", ["user_id"], unique=False)
    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column(
            "granted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("granted_by", sa.UUID(), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["granted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
        sa.UniqueConstraint("user_id", "role_id", name="uq_user_role"),
    )
    op.create_index("ix_user_roles_expires_at", "user_roles", ["expires_at"], unique=False)
    op.create_index("ix_user_roles_user_id", "user_roles", ["user_id"], unique=False)
    op.create_table(
        "webhook_deliveries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("subscription_id", sa.UUID(), nullable=False),
        sa.Column("event_type", sa.String(length=255), nullable=False),
        sa.Column("event_id", sa.String(length=255), nullable=False),
        sa.Column("event_data", sa.JSON(), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("response_code", sa.Integer(), nullable=True),
        sa.Column("response_body", sa.Text(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("attempt_number", sa.Integer(), nullable=False),
        sa.Column("next_retry_at", sa.DateTime(), nullable=True),
        sa.Column("duration_ms", sa.Integer(), nullable=True),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"], ["webhook_subscriptions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_webhook_deliveries_event_id"), "webhook_deliveries", ["event_id"], unique=False
    )
    op.create_index(
        op.f("ix_webhook_deliveries_event_type"), "webhook_deliveries", ["event_type"], unique=False
    )
    op.create_index(
        op.f("ix_webhook_deliveries_status"), "webhook_deliveries", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_webhook_deliveries_subscription_id"),
        "webhook_deliveries",
        ["subscription_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_deliveries_tenant_id"), "webhook_deliveries", ["tenant_id"], unique=False
    )
    op.create_table(
        "contacts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column(
            "customer_id",
            sa.UUID(),
            nullable=True,
            comment="Legacy FK - use customer_links join table for new relationships",
        ),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("middle_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("prefix", sa.String(length=20), nullable=True),
        sa.Column("suffix", sa.String(length=20), nullable=True),
        sa.Column("company", sa.String(length=255), nullable=True),
        sa.Column("job_title", sa.String(length=255), nullable=True),
        sa.Column("department", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("stage", sa.String(length=50), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("custom_fields", sa.JSON(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column("birthday", sa.DateTime(timezone=True), nullable=True),
        sa.Column("anniversary", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("is_decision_maker", sa.Boolean(), nullable=False),
        sa.Column("is_billing_contact", sa.Boolean(), nullable=False),
        sa.Column("is_technical_contact", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("preferred_contact_method", sa.String(length=50), nullable=True),
        sa.Column("preferred_language", sa.String(length=10), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_contacted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_by", sa.UUID(), nullable=True),
        sa.CheckConstraint(
            "display_name IS NOT NULL AND display_name != ''", name="check_display_name_not_empty"
        ),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_contacts_company", "contacts", ["company"], unique=False)
    op.create_index("ix_contacts_customer_id", "contacts", ["customer_id"], unique=False)
    op.create_index("ix_contacts_deleted_at", "contacts", ["deleted_at"], unique=False)
    op.create_index("ix_contacts_display_name", "contacts", ["display_name"], unique=False)
    op.create_index("ix_contacts_owner_id", "contacts", ["owner_id"], unique=False)
    op.create_index("ix_contacts_stage", "contacts", ["stage"], unique=False)
    op.create_index("ix_contacts_status", "contacts", ["status"], unique=False)
    op.create_index("ix_contacts_tenant_id", "contacts", ["tenant_id"], unique=False)
    op.create_table(
        "customer_activities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column(
            "activity_type",
            sa.Enum(
                "CREATED",
                "UPDATED",
                "STATUS_CHANGED",
                "NOTE_ADDED",
                "TAG_ADDED",
                "TAG_REMOVED",
                "CONTACT_MADE",
                "PURCHASE",
                "SUPPORT_TICKET",
                "LOGIN",
                "EXPORT",
                "IMPORT",
                name="activitytype",
            ),
            nullable=False,
        ),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("metadata", sa.JSON(), nullable=False),
        sa.Column("performed_by", sa.UUID(), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["performed_by"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_activity_customer_time",
        "customer_activities",
        ["customer_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_customer_activities_activity_type"),
        "customer_activities",
        ["activity_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_customer_activities_tenant_id"), "customer_activities", ["tenant_id"], unique=False
    )
    op.create_table(
        "customer_notes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("subject", sa.String(length=200), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "is_internal", sa.Boolean(), nullable=False, comment="Internal note vs customer visible"
        ),
        sa.Column("created_by_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["created_by_id"], ["users.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_customer_notes_tenant_id"), "customer_notes", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_note_customer_created", "customer_notes", ["customer_id", "created_at"], unique=False
    )
    op.create_table(
        "customer_tags_association",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("tag_name", sa.String(length=50), nullable=False),
        sa.Column("tag_category", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("customer_id", "tag_name", name="uq_customer_tag"),
    )
    op.create_index(
        op.f("ix_customer_tags_association_tenant_id"),
        "customer_tags_association",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        "ix_tag_name_category",
        "customer_tags_association",
        ["tag_name", "tag_category"],
        unique=False,
    )
    op.create_table(
        "data_import_failures",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("job_id", sa.UUID(), nullable=False),
        sa.Column("row_number", sa.Integer(), nullable=False),
        sa.Column("error_type", sa.String(length=50), nullable=False),
        sa.Column("error_message", sa.Text(), nullable=False),
        sa.Column(
            "row_data", sa.JSON(), nullable=False, comment="Original row data that failed to import"
        ),
        sa.Column(
            "field_errors", sa.JSON(), nullable=False, comment="Field-specific error messages"
        ),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("can_retry", sa.Boolean(), nullable=False),
        sa.Column("resolved", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["job_id"], ["data_import_jobs.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_import_failures_job_id"), "data_import_failures", ["job_id"], unique=False
    )
    op.create_index(
        op.f("ix_data_import_failures_tenant_id"),
        "data_import_failures",
        ["tenant_id"],
        unique=False,
    )
    op.create_index(
        "ix_import_failures_error_type", "data_import_failures", ["error_type"], unique=False
    )
    op.create_index(
        "ix_import_failures_job_resolved",
        "data_import_failures",
        ["job_id", "resolved"],
        unique=False,
    )
    op.create_table(
        "contact_activities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("contact_id", sa.UUID(), nullable=False),
        sa.Column("activity_type", sa.String(length=50), nullable=False),
        sa.Column("subject", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("activity_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("outcome", sa.String(length=100), nullable=True),
        sa.Column("performed_by", sa.UUID(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["performed_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_contact_activities_activity_date", "contact_activities", ["activity_date"], unique=False
    )
    op.create_index(
        "ix_contact_activities_activity_type", "contact_activities", ["activity_type"], unique=False
    )
    op.create_index(
        "ix_contact_activities_contact_id", "contact_activities", ["contact_id"], unique=False
    )
    op.create_index(
        "ix_contact_activities_performed_by", "contact_activities", ["performed_by"], unique=False
    )
    op.create_table(
        "contact_methods",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("contact_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("value", sa.String(length=500), nullable=False),
        sa.Column("label", sa.String(length=50), nullable=True),
        sa.Column("address_line1", sa.String(length=255), nullable=True),
        sa.Column("address_line2", sa.String(length=255), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("state_province", sa.String(length=100), nullable=True),
        sa.Column("postal_code", sa.String(length=20), nullable=True),
        sa.Column("country", sa.String(length=2), nullable=True),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("verified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("verified_by", sa.UUID(), nullable=True),
        sa.Column("verification_token", sa.String(length=255), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["verified_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("contact_id", "type", "value", name="uq_contact_method"),
    )
    op.create_index(
        "ix_contact_methods_contact_id", "contact_methods", ["contact_id"], unique=False
    )
    op.create_index(
        "ix_contact_methods_is_primary", "contact_methods", ["is_primary"], unique=False
    )
    op.create_index("ix_contact_methods_type", "contact_methods", ["type"], unique=False)
    op.create_index("ix_contact_methods_value", "contact_methods", ["value"], unique=False)
    op.create_table(
        "contact_to_labels",
        sa.Column("contact_id", sa.UUID(), nullable=False),
        sa.Column("label_definition_id", sa.UUID(), nullable=False),
        sa.Column(
            "assigned_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("assigned_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assigned_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["label_definition_id"], ["contact_label_definitions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("contact_id", "label_definition_id"),
        sa.UniqueConstraint("contact_id", "label_definition_id", name="uq_contact_label"),
    )
    op.create_index(
        "ix_contact_labels_contact_id", "contact_to_labels", ["contact_id"], unique=False
    )
    op.create_index(
        "ix_contact_labels_label_definition_id",
        "contact_to_labels",
        ["label_definition_id"],
        unique=False,
    )
    op.create_table(
        "customer_contacts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("contact_id", sa.UUID(), nullable=False, comment="FK to contacts.id"),
        sa.Column(
            "role",
            sa.Enum(
                "PRIMARY",
                "BILLING",
                "TECHNICAL",
                "ADMIN",
                "SUPPORT",
                "EMERGENCY",
                "OTHER",
                name="contactrole",
            ),
            nullable=False,
        ),
        sa.Column(
            "is_primary_for_role",
            sa.Boolean(),
            nullable=False,
            comment="Primary contact for this specific role",
        ),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("customer_id", "contact_id", "role", name="uq_customer_contact_role"),
    )
    op.create_index(
        "ix_customer_contact_contact", "customer_contacts", ["contact_id", "role"], unique=False
    )
    op.create_index(
        "ix_customer_contact_customer", "customer_contacts", ["customer_id", "role"], unique=False
    )
    op.create_index(
        op.f("ix_customer_contacts_contact_id"), "customer_contacts", ["contact_id"], unique=False
    )
    op.create_index(
        op.f("ix_customer_contacts_customer_id"), "customer_contacts", ["customer_id"], unique=False
    )
    op.create_index(
        op.f("ix_customer_contacts_tenant_id"), "customer_contacts", ["tenant_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_customer_contacts_tenant_id"), table_name="customer_contacts")
    op.drop_index(op.f("ix_customer_contacts_customer_id"), table_name="customer_contacts")
    op.drop_index(op.f("ix_customer_contacts_contact_id"), table_name="customer_contacts")
    op.drop_index("ix_customer_contact_customer", table_name="customer_contacts")
    op.drop_index("ix_customer_contact_contact", table_name="customer_contacts")
    op.drop_table("customer_contacts")
    op.drop_index("ix_contact_labels_label_definition_id", table_name="contact_to_labels")
    op.drop_index("ix_contact_labels_contact_id", table_name="contact_to_labels")
    op.drop_table("contact_to_labels")
    op.drop_index("ix_contact_methods_value", table_name="contact_methods")
    op.drop_index("ix_contact_methods_type", table_name="contact_methods")
    op.drop_index("ix_contact_methods_is_primary", table_name="contact_methods")
    op.drop_index("ix_contact_methods_contact_id", table_name="contact_methods")
    op.drop_table("contact_methods")
    op.drop_index("ix_contact_activities_performed_by", table_name="contact_activities")
    op.drop_index("ix_contact_activities_contact_id", table_name="contact_activities")
    op.drop_index("ix_contact_activities_activity_type", table_name="contact_activities")
    op.drop_index("ix_contact_activities_activity_date", table_name="contact_activities")
    op.drop_table("contact_activities")
    op.drop_index("ix_import_failures_job_resolved", table_name="data_import_failures")
    op.drop_index("ix_import_failures_error_type", table_name="data_import_failures")
    op.drop_index(op.f("ix_data_import_failures_tenant_id"), table_name="data_import_failures")
    op.drop_index(op.f("ix_data_import_failures_job_id"), table_name="data_import_failures")
    op.drop_table("data_import_failures")
    op.drop_index("ix_tag_name_category", table_name="customer_tags_association")
    op.drop_index(
        op.f("ix_customer_tags_association_tenant_id"), table_name="customer_tags_association"
    )
    op.drop_table("customer_tags_association")
    op.drop_index("ix_note_customer_created", table_name="customer_notes")
    op.drop_index(op.f("ix_customer_notes_tenant_id"), table_name="customer_notes")
    op.drop_table("customer_notes")
    op.drop_index(op.f("ix_customer_activities_tenant_id"), table_name="customer_activities")
    op.drop_index(op.f("ix_customer_activities_activity_type"), table_name="customer_activities")
    op.drop_index("ix_activity_customer_time", table_name="customer_activities")
    op.drop_table("customer_activities")
    op.drop_index("ix_contacts_tenant_id", table_name="contacts")
    op.drop_index("ix_contacts_status", table_name="contacts")
    op.drop_index("ix_contacts_stage", table_name="contacts")
    op.drop_index("ix_contacts_owner_id", table_name="contacts")
    op.drop_index("ix_contacts_display_name", table_name="contacts")
    op.drop_index("ix_contacts_deleted_at", table_name="contacts")
    op.drop_index("ix_contacts_customer_id", table_name="contacts")
    op.drop_index("ix_contacts_company", table_name="contacts")
    op.drop_table("contacts")
    op.drop_index(op.f("ix_webhook_deliveries_tenant_id"), table_name="webhook_deliveries")
    op.drop_index(op.f("ix_webhook_deliveries_subscription_id"), table_name="webhook_deliveries")
    op.drop_index(op.f("ix_webhook_deliveries_status"), table_name="webhook_deliveries")
    op.drop_index(op.f("ix_webhook_deliveries_event_type"), table_name="webhook_deliveries")
    op.drop_index(op.f("ix_webhook_deliveries_event_id"), table_name="webhook_deliveries")
    op.drop_table("webhook_deliveries")
    op.drop_index("ix_user_roles_user_id", table_name="user_roles")
    op.drop_index("ix_user_roles_expires_at", table_name="user_roles")
    op.drop_table("user_roles")
    op.drop_index("ix_user_permissions_user_id", table_name="user_permissions")
    op.drop_table("user_permissions")
    op.drop_index("ix_role_permissions_role_id", table_name="role_permissions")
    op.drop_table("role_permissions")
    op.drop_index("ix_role_hierarchy_parent", table_name="role_hierarchy")
    op.drop_index("ix_role_hierarchy_child", table_name="role_hierarchy")
    op.drop_table("role_hierarchy")
    op.drop_index("ix_permission_grants_user_id", table_name="permission_grants")
    op.drop_index("ix_permission_grants_granted_by", table_name="permission_grants")
    op.drop_index("ix_permission_grants_created_at", table_name="permission_grants")
    op.drop_table("permission_grants")
    op.drop_index(
        op.f("ix_payment_reconciliations_tenant_id"), table_name="payment_reconciliations"
    )
    op.drop_index("idx_reconciliation_tenant", table_name="payment_reconciliations")
    op.drop_index("idx_reconciliation_date", table_name="payment_reconciliations")
    op.drop_index("idx_reconciliation_bank", table_name="payment_reconciliations")
    op.drop_table("payment_reconciliations")
    op.drop_table("payment_invoices")
    op.drop_table("invoice_line_items")
    op.drop_index("ix_import_jobs_tenant_type", table_name="data_import_jobs")
    op.drop_index("ix_import_jobs_tenant_status", table_name="data_import_jobs")
    op.drop_index("ix_import_jobs_created", table_name="data_import_jobs")
    op.drop_index(op.f("ix_data_import_jobs_tenant_id"), table_name="data_import_jobs")
    op.drop_index(op.f("ix_data_import_jobs_status"), table_name="data_import_jobs")
    op.drop_index(op.f("ix_data_import_jobs_job_type"), table_name="data_import_jobs")
    op.drop_table("data_import_jobs")
    op.drop_index(op.f("ix_customers_tier"), table_name="customers")
    op.drop_index(op.f("ix_customers_tenant_id"), table_name="customers")
    op.drop_index(op.f("ix_customers_status"), table_name="customers")
    op.drop_index(op.f("ix_customers_external_id"), table_name="customers")
    op.drop_index(op.f("ix_customers_email"), table_name="customers")
    op.drop_index(op.f("ix_customers_customer_type"), table_name="customers")
    op.drop_index(op.f("ix_customers_customer_number"), table_name="customers")
    op.drop_index("ix_customer_status_tier", table_name="customers")
    op.drop_index("ix_customer_search", table_name="customers")
    op.drop_index("ix_customer_location", table_name="customers")
    op.drop_table("customers")
    op.drop_table("credit_note_line_items")
    op.drop_index(op.f("ix_credit_applications_tenant_id"), table_name="credit_applications")
    op.drop_index(op.f("ix_credit_applications_applied_to_id"), table_name="credit_applications")
    op.drop_index("idx_credit_application_tenant_target", table_name="credit_applications")
    op.drop_table("credit_applications")
    op.drop_index("ix_contact_label_definitions_tenant_id", table_name="contact_label_definitions")
    op.drop_index("ix_contact_label_definitions_slug", table_name="contact_label_definitions")
    op.drop_index("ix_contact_label_definitions_category", table_name="contact_label_definitions")
    op.drop_table("contact_label_definitions")
    op.drop_index("ix_contact_field_definitions_tenant_id", table_name="contact_field_definitions")
    op.drop_index("ix_contact_field_definitions_field_key", table_name="contact_field_definitions")
    op.drop_index(
        "ix_contact_field_definitions_field_group", table_name="contact_field_definitions"
    )
    op.drop_table("contact_field_definitions")
    op.drop_index(op.f("ix_cash_transactions_tenant_id"), table_name="cash_transactions")
    op.drop_table("cash_transactions")
    op.drop_index(op.f("ix_cash_reconciliations_tenant_id"), table_name="cash_reconciliations")
    op.drop_table("cash_reconciliations")
    op.drop_index(op.f("ix_webhook_subscriptions_tenant_id"), table_name="webhook_subscriptions")
    op.drop_table("webhook_subscriptions")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_tenant_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_transactions_transaction_type"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_transaction_date"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_tenant_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_payment_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_invoice_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_customer_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_credit_note_id"), table_name="transactions")
    op.drop_index("idx_transaction_tenant_date", table_name="transactions")
    op.drop_index("idx_transaction_tenant_customer", table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_roles_name"), table_name="roles")
    op.drop_table("roles")
    op.drop_index(op.f("ix_profile_change_history_user_id"), table_name="profile_change_history")
    op.drop_index(op.f("ix_profile_change_history_tenant_id"), table_name="profile_change_history")
    op.drop_index(op.f("ix_profile_change_history_field_name"), table_name="profile_change_history")
    op.drop_table("profile_change_history")
    op.drop_index(op.f("ix_permissions_name"), table_name="permissions")
    op.drop_table("permissions")
    op.drop_index(op.f("ix_payments_tenant_id"), table_name="payments")
    op.drop_index(op.f("ix_payments_status"), table_name="payments")
    op.drop_index(op.f("ix_payments_provider_payment_id"), table_name="payments")
    op.drop_index(op.f("ix_payments_idempotency_key"), table_name="payments")
    op.drop_index(op.f("ix_payments_customer_id"), table_name="payments")
    op.drop_index("idx_payment_tenant_status", table_name="payments")
    op.drop_index("idx_payment_tenant_customer", table_name="payments")
    op.drop_table("payments")
    op.drop_index(op.f("ix_payment_methods_tenant_id"), table_name="payment_methods")
    op.drop_index(op.f("ix_payment_methods_customer_id"), table_name="payment_methods")
    op.drop_index("idx_payment_method_tenant_customer", table_name="payment_methods")
    op.drop_table("payment_methods")
    op.drop_index(op.f("ix_manual_payments_tenant_id"), table_name="manual_payments")
    op.drop_index("idx_manual_payment_tenant", table_name="manual_payments")
    op.drop_index("idx_manual_payment_status", table_name="manual_payments")
    op.drop_index("idx_manual_payment_method", table_name="manual_payments")
    op.drop_index("idx_manual_payment_invoice", table_name="manual_payments")
    op.drop_index("idx_manual_payment_date", table_name="manual_payments")
    op.drop_index("idx_manual_payment_customer", table_name="manual_payments")
    op.drop_table("manual_payments")
    op.drop_index(op.f("ix_invoices_tenant_id"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_subscription_id"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_status"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_payment_status"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_invoice_number"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_idempotency_key"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_due_date"), table_name="invoices")
    op.drop_index(op.f("ix_invoices_customer_id"), table_name="invoices")
    op.drop_index("idx_invoice_tenant_status", table_name="invoices")
    op.drop_index("idx_invoice_tenant_due_date", table_name="invoices")
    op.drop_index("idx_invoice_tenant_customer", table_name="invoices")
    op.drop_table("invoices")
    op.drop_index(
        op.f("ix_email_verification_tokens_user_id"), table_name="email_verification_tokens"
    )
    op.drop_index(
        op.f("ix_email_verification_tokens_token_hash"), table_name="email_verification_tokens"
    )
    op.drop_index(
        op.f("ix_email_verification_tokens_tenant_id"), table_name="email_verification_tokens"
    )
    op.drop_table("email_verification_tokens")
    op.drop_index(op.f("ix_customer_segments_tenant_id"), table_name="customer_segments")
    op.drop_table("customer_segments")
    op.drop_index("idx_customer_credit_tenant", table_name="customer_credits")
    op.drop_table("customer_credits")
    op.drop_index(op.f("ix_credit_notes_tenant_id"), table_name="credit_notes")
    op.drop_index(op.f("ix_credit_notes_status"), table_name="credit_notes")
    op.drop_index(op.f("ix_credit_notes_invoice_id"), table_name="credit_notes")
    op.drop_index(op.f("ix_credit_notes_idempotency_key"), table_name="credit_notes")
    op.drop_index(op.f("ix_credit_notes_customer_id"), table_name="credit_notes")
    op.drop_index(op.f("ix_credit_notes_credit_note_number"), table_name="credit_notes")
    op.drop_index("idx_credit_note_tenant_status", table_name="credit_notes")
    op.drop_index("idx_credit_note_tenant_customer", table_name="credit_notes")
    op.drop_table("credit_notes")
    op.drop_index(op.f("ix_company_bank_accounts_tenant_id"), table_name="company_bank_accounts")
    op.drop_index("idx_company_bank_tenant", table_name="company_bank_accounts")
    op.drop_index("idx_company_bank_status", table_name="company_bank_accounts")
    op.drop_index("idx_company_bank_primary", table_name="company_bank_accounts")
    op.drop_table("company_bank_accounts")
    op.drop_index(
        op.f("ix_communication_templates_tenant_id"), table_name="communication_templates"
    )
    op.drop_index(op.f("ix_communication_templates_name"), table_name="communication_templates")
    op.drop_table("communication_templates")
    op.drop_index(op.f("ix_communication_stats_type"), table_name="communication_stats")
    op.drop_index(op.f("ix_communication_stats_tenant_id"), table_name="communication_stats")
    op.drop_index(op.f("ix_communication_stats_stats_date"), table_name="communication_stats")
    op.drop_table("communication_stats")
    op.drop_index(op.f("ix_communication_logs_user_id"), table_name="communication_logs")
    op.drop_index(op.f("ix_communication_logs_type"), table_name="communication_logs")
    op.drop_index(op.f("ix_communication_logs_tenant_id"), table_name="communication_logs")
    op.drop_index(op.f("ix_communication_logs_status"), table_name="communication_logs")
    op.drop_index(op.f("ix_communication_logs_recipient"), table_name="communication_logs")
    op.drop_index(op.f("ix_communication_logs_job_id"), table_name="communication_logs")
    op.drop_table("communication_logs")
    op.drop_index(op.f("ix_cash_registers_tenant_id"), table_name="cash_registers")
    op.drop_index("idx_cash_register_tenant", table_name="cash_registers")
    op.drop_index("idx_cash_register_active", table_name="cash_registers")
    op.drop_table("cash_registers")
    op.drop_index("ix_billing_subscriptions_tenant_status", table_name="billing_subscriptions")
    op.drop_index("ix_billing_subscriptions_tenant_plan", table_name="billing_subscriptions")
    op.drop_index(op.f("ix_billing_subscriptions_tenant_id"), table_name="billing_subscriptions")
    op.drop_index("ix_billing_subscriptions_tenant_customer", table_name="billing_subscriptions")
    op.drop_index("ix_billing_subscriptions_period_end", table_name="billing_subscriptions")
    op.drop_table("billing_subscriptions")
    op.drop_index(
        op.f("ix_billing_subscription_plans_tenant_id"), table_name="billing_subscription_plans"
    )
    op.drop_index("ix_billing_plans_tenant_product", table_name="billing_subscription_plans")
    op.drop_index("ix_billing_plans_tenant_active", table_name="billing_subscription_plans")
    op.drop_table("billing_subscription_plans")
    op.drop_index(
        op.f("ix_billing_subscription_events_tenant_id"), table_name="billing_subscription_events"
    )
    op.drop_index("ix_billing_events_tenant_type", table_name="billing_subscription_events")
    op.drop_index("ix_billing_events_tenant_subscription", table_name="billing_subscription_events")
    op.drop_index("ix_billing_events_created", table_name="billing_subscription_events")
    op.drop_table("billing_subscription_events")
    op.drop_index("ix_billing_rule_usage_used_at", table_name="billing_rule_usage")
    op.drop_index("ix_billing_rule_usage_tenant_rule", table_name="billing_rule_usage")
    op.drop_index(op.f("ix_billing_rule_usage_tenant_id"), table_name="billing_rule_usage")
    op.drop_index("ix_billing_rule_usage_tenant_customer", table_name="billing_rule_usage")
    op.drop_table("billing_rule_usage")
    op.drop_index("ix_billing_products_tenant_type", table_name="billing_products")
    op.drop_index("ix_billing_products_tenant_sku", table_name="billing_products")
    op.drop_index(op.f("ix_billing_products_tenant_id"), table_name="billing_products")
    op.drop_index("ix_billing_products_tenant_category", table_name="billing_products")
    op.drop_index("ix_billing_products_tenant_active", table_name="billing_products")
    op.drop_table("billing_products")
    op.drop_index(
        op.f("ix_billing_product_categories_tenant_id"), table_name="billing_product_categories"
    )
    op.drop_index("ix_billing_categories_tenant_name", table_name="billing_product_categories")
    op.drop_index("ix_billing_categories_sort", table_name="billing_product_categories")
    op.drop_table("billing_product_categories")
    op.drop_index("ix_billing_rules_tenant_active", table_name="billing_pricing_rules")
    op.drop_index("ix_billing_rules_starts_ends", table_name="billing_pricing_rules")
    op.drop_index(op.f("ix_billing_pricing_rules_tenant_id"), table_name="billing_pricing_rules")
    op.drop_table("billing_pricing_rules")
    op.drop_index(op.f("ix_backup_codes_user_id"), table_name="backup_codes")
    op.drop_index(op.f("ix_backup_codes_tenant_id"), table_name="backup_codes")
    op.drop_table("backup_codes")
    op.drop_index("ix_audit_activities_user_timestamp", table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_user_id"), table_name="audit_activities")
    op.drop_index("ix_audit_activities_type_timestamp", table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_timestamp"), table_name="audit_activities")
    op.drop_index("ix_audit_activities_tenant_timestamp", table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_tenant_id"), table_name="audit_activities")
    op.drop_index("ix_audit_activities_severity_timestamp", table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_severity"), table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_id"), table_name="audit_activities")
    op.drop_index(op.f("ix_audit_activities_activity_type"), table_name="audit_activities")
    op.drop_table("audit_activities")
    # ### end Alembic commands ###
