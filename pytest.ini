[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Pytest options
addopts =
    -ra
    --strict-markers
    --ignore=tests/test_real_services.py
    --ignore=tests/test_observability.py
    --ignore=tests/billing/test_automated_invoice_generation.py
    --ignore=tests/billing/test_billing_e2e_comprehensive.py
    --ignore=tests/billing/test_billing_e2e_simple.py
    --ignore=tests/billing/test_billing_resilience.py
    --ignore=tests/billing/test_stripe_webhooks_e2e.py
    --ignore=tests/billing/test_pricing_service.py
    --ignore=tests/performance/test_billing_load.py
    --ignore=tests/security/test_payment_security.py
    --ignore=tests/search/test_service.py
    --ignore=tests/search/test_router.py
    --ignore=tests/billing/catalog/test_models.py
    --ignore=tests/billing/catalog/test_service.py
    --ignore=tests/billing/subscriptions/test_models.py
    --ignore=tests/billing/subscriptions/test_service.py
    --ignore=tests/billing/pricing/

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    skip: Skip test
    auth: Authentication tests
    secrets: Secrets management tests
    performance: Performance tests
    benchmark: Performance benchmark tests
    e2e: End-to-end tests
    observability: Observability related tests
    chaos: Chaos engineering tests
    contract: API contract tests

# Asyncio - strict mode for better event loop handling
asyncio_mode = strict

# Logging
log_cli = false
log_cli_level = INFO

# Coverage (disabled for VSCode)
# Use --cov flag when needed